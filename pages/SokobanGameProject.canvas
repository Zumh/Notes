{
	"nodes":[
		{"id":"0ff660f468161adf","x":-180,"y":40,"width":316,"height":68,"type":"text","text":"## Sokoban Game project"},
		{"id":"cbed28f46be95406","x":-222,"y":304,"width":400,"height":177,"type":"file","file":"assets/game.webp"},
		{"id":"60dfb476a8bd2b2c","x":-760,"y":-654,"width":440,"height":1456,"type":"text","text":"## Materials\n### Floor square[](https://programming-23.mooc.fi/part-14/1-game-project#floor-square)\n\n[![floor](https://programming-23.mooc.fi/static/9aefcdf4192b60fb3bf21288d49a0bd5/a1812/floor.png \"floor\")](https://programming-23.mooc.fi/static/9aefcdf4192b60fb3bf21288d49a0bd5/a1812/floor.png)\n\n-   Filename: `floor.png`\n-   Position in list: 0\n\n### Wall square[](https://programming-23.mooc.fi/part-14/1-game-project#wall-square)\n\n[![wall](https://programming-23.mooc.fi/static/73ec5a44eba6d09dfe097ba346137a94/a1812/wall.png \"wall\")](https://programming-23.mooc.fi/static/73ec5a44eba6d09dfe097ba346137a94/a1812/wall.png)\n\n-   Filename: `wall.png`\n-   Position in list: 1\n\n### Target square[](https://programming-23.mooc.fi/part-14/1-game-project#target-square)\n\n[![target](https://programming-23.mooc.fi/static/36b1cacabf9fb62e1c67fc5e6cfa50e3/a1812/target.png \"target\")](https://programming-23.mooc.fi/static/36b1cacabf9fb62e1c67fc5e6cfa50e3/a1812/target.png)\n\n-   Filename: `target.png`\n-   Position in list: 2\n-   The robot should move some box to this square\n\n### Box[](https://programming-23.mooc.fi/part-14/1-game-project#box)\n\n[![box](https://programming-23.mooc.fi/static/6e7afd4acd3f9b214a5c43273b23c834/a1812/box.png \"box\")](https://programming-23.mooc.fi/static/6e7afd4acd3f9b214a5c43273b23c834/a1812/box.png)\n\n-   Filename: `box.png`\n-   Position in list: 3\n\n### Robot[](https://programming-23.mooc.fi/part-14/1-game-project#robot)\n\n[![robot](https://programming-23.mooc.fi/static/5fb4f02fac6c4d361c9057099bc9f890/a1812/robot.png \"robot\")](https://programming-23.mooc.fi/static/5fb4f02fac6c4d361c9057099bc9f890/a1812/robot.png)\n\n-   Filename: `robot.png`\n-   Position in list: 4\n\n### Box on a target square[](https://programming-23.mooc.fi/part-14/1-game-project#box-on-a-target-square)\n\n[![done](https://programming-23.mooc.fi/static/15225a12ccfe0e42a543bea73f4ff889/a1812/done.png \"done\")](https://programming-23.mooc.fi/static/15225a12ccfe0e42a543bea73f4ff889/a1812/done.png)\n\n-   Filename: `done.png`\n-   Position in list: 5\n-   The box has been moved to the target square\n\n### Robot on a target square[](https://programming-23.mooc.fi/part-14/1-game-project#robot-on-a-target-square)\n\n[![target robot](https://programming-23.mooc.fi/static/70f904da050def3ee01b9b01b0b50b16/a1812/target_robot.png \"target robot\")](https://programming-23.mooc.fi/static/70f904da050def3ee01b9b01b0b50b16/a1812/target_robot.png)\n\n-   Filename: `target_robot.png`\n-   Position in list: 6\n-   The robot can also be on an empty target square"},
		{"id":"e0321a7191c56ba4","x":260,"y":-936,"width":800,"height":1316,"type":"text","text":"```\n\nimport pygame\n\nclass Sokoban:\n    def __init__(self):\n        pygame.init()\n        \n        self.load_images()\n        self.new_game()\n    \n\t  \n\n        self.height = len(self.map)\n        self.width = len(self.map[0])\n        self.scale = self.images[0].get_width()\n\n        window_height = self.scale * self.height\n        window_width = self.scale * self.width\n        \n\t\tself.window = pygame.display.set_mode((window_width, window_height + self.scale))\n\n        self.game_font = pygame.font.SysFont(\"Arial\", 24)\n        pygame.display.set_caption(\"Sokoban\")\n\n        self.main_loop()\n\n    def load_images(self):\n        self.images = []\n        for name in [\"floor\", \"wall\", \"target\", \"box\", \"robot\", \"done\", \"target_robot\"]:\n            self.images.append(pygame.image.load(name + \".png\"))\n\n    def new_game(self):\n        self.map = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                    [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1],\n                    [1, 2, 3, 0, 0, 0, 1, 0, 0, 1, 2, 3, 0, 0, 0, 0, 1],\n                    [1, 0, 0, 1, 2, 3, 0, 2, 3, 0, 0, 0, 1, 0, 0, 0, 1],\n                    [1, 0, 4, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1],\n                    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]\n        \n\t\tself.moves = 0\n\n\n    def main_loop(self):\n        while True:\n            self.check_events()\n            self.draw_window()\n\n    def check_events(self):\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                exit()\n        \n\t\t\tif event.key == pygame.K_F2:\n                self.new_game()\n                if event.key == pygame.K_ESCAPE:\n                    exit()\n\n\n    def draw_window(self):\n        self.window.fill((0, 0, 0))\n\n        for y in range(self.height):\n            for x in range(self.width):\n                square = self.map[y][x]\n                self.window.blit(self.images[square], (x * self.scale, y * self.scale))\n\t\tgame_text = self.game_font.render(\"Moves: \" + str(self.moves), True, (255, 0, 0))\n        self.window.blit(game_text, (25, self.height * self.scale + 10))\n\n\t\tgame_text = self.game_font.render(\"Esc = exit game\", True, (255, 0, 0))\n        self.window.blit(game_text, (400, self.height * self.scale + 10))\n\n        pygame.display.flip()\n        \n\n\nif __name__ == \"__main__\":\n    Sokoban()\n```"},
		{"id":"82ed1d31dd5f597c","x":1837,"y":-654,"width":485,"height":206,"type":"text","text":"## Searching for robot\n  ```\ndef find_robot(self ):\n        for y in range(self.height):\n            for x in range(self.width):\n                if self.map[y][x] in [4, 6]:\n                    return (y, x)\n```"},
		{"id":"8d8fd64b4ef052f7","x":1837,"y":-368,"width":637,"height":632,"type":"text","text":"### Changes game grid or move\n```\n\n\tdef move(self, move_y, move_x):\n\n\t\tif self.game_solved():\n\t\t\treturn\n        robot_old_y, robot_old_x = self.find_robot() \n        robot_new_y = robot_old_y + move_y\n        robot_new_x = robot_old_x + move_x\n        \n\n\n        if self.map[robot_new_y][robot_new_x] == 1:\n            return\n\n        if self.map[robot_new_y][robot_new_x] in [3, 5]:\n            box_new_y = robot_new_y + move_y\n            box_new_x = robot_new_x + move_x\n\n            if self.map[box_new_y][box_new_x] in [1, 3, 5]:\n                return\n\n            self.map[robot_new_y][robot_new_x] -= 3\n            self.map[box_new_y][box_new_x] += 3\n\n        self.map[robot_old_y][robot_old_x] -= 4\n        self.map[robot_new_y][robot_new_x] += 4\n        self.moves += 1\n```"},
		{"id":"c75138bd7042066d","x":1158,"y":0,"width":572,"height":435,"type":"text","text":"## Handling key events\n```\n   def check_events(self):\n        for event in pygame.event.get():\n            if event.type == pygame.KEYDOWN:\n                if event.key == pygame.K_LEFT:\n                    self.move(0, -1)\n                if event.key == pygame.K_RIGHT:\n                    self.move(0, 1)\n                if event.key == pygame.K_UP:\n                    self.move(-1, 0)\n                if event.key == pygame.K_DOWN:\n                    self.move(1, 0)\n\n            if event.type == pygame.QUIT:\n                exit()\n```"},
		{"id":"028fb155f78a709b","x":1158,"y":-772,"width":313,"height":237,"type":"text","text":"# Initialization class\nThe constructor of the class initializes the pygame modules and the essential variables and \ndata structures involved in the game. It also calls the main loop method of the game."},
		{"id":"8ad8ff8136b1e3ab","x":1532,"y":-994,"width":451,"height":286,"type":"text","text":"## Game solved\n```\n def game_solved(self):\n        for y in range(self.height):\n            for x in range(self.width):\n                if self.map[y][x] in [2, 6]:\n\n                    return False\n        # testing\n        return True\n```"}
	],
	"edges":[
		{"id":"454f631831bfdb33","fromNode":"0ff660f468161adf","fromSide":"right","toNode":"e0321a7191c56ba4","toSide":"left"},
		{"id":"cdca79f5074025e0","fromNode":"0ff660f468161adf","fromSide":"bottom","toNode":"cbed28f46be95406","toSide":"top"},
		{"id":"51f0f995b1e7218e","fromNode":"60dfb476a8bd2b2c","fromSide":"right","toNode":"0ff660f468161adf","toSide":"left"},
		{"id":"e046c38bf4fd40a5","fromNode":"e0321a7191c56ba4","fromSide":"right","toNode":"028fb155f78a709b","toSide":"left"},
		{"id":"a787566a5f3f7ef8","fromNode":"e0321a7191c56ba4","fromSide":"right","toNode":"c75138bd7042066d","toSide":"left"},
		{"id":"06c80380dd3b1a56","fromNode":"e0321a7191c56ba4","fromSide":"right","toNode":"82ed1d31dd5f597c","toSide":"left"},
		{"id":"60c6ac1966bbe811","fromNode":"e0321a7191c56ba4","fromSide":"right","toNode":"8d8fd64b4ef052f7","toSide":"left"},
		{"id":"2613bdb15bfb4487","fromNode":"e0321a7191c56ba4","fromSide":"right","toNode":"8ad8ff8136b1e3ab","toSide":"bottom"}
	]
}